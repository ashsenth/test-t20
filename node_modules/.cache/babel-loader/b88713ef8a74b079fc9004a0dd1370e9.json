{"ast":null,"code":"/*! @azure/msal-common v7.6.0 2022-10-10 */\n'use strict';\n\nimport { JoseHeaderError } from '../error/JoseHeaderError.js';\nimport { JsonTypes } from '../utils/Constants.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\nvar JoseHeader = /** @class */function () {\n  function JoseHeader(options) {\n    this.typ = options.typ;\n    this.alg = options.alg;\n    this.kid = options.kid;\n  }\n  /**\r\n   * Builds SignedHttpRequest formatted JOSE Header from the\r\n   * JOSE Header options provided or previously set on the object and returns\r\n   * the stringified header object.\r\n   * Throws if keyId or algorithm aren't provided since they are required for Access Token Binding.\r\n   * @param shrHeaderOptions\r\n   * @returns\r\n   */\n  JoseHeader.getShrHeaderString = function (shrHeaderOptions) {\n    // KeyID is required on the SHR header\n    if (!shrHeaderOptions.kid) {\n      throw JoseHeaderError.createMissingKidError();\n    }\n    // Alg is required on the SHR header\n    if (!shrHeaderOptions.alg) {\n      throw JoseHeaderError.createMissingAlgError();\n    }\n    var shrHeader = new JoseHeader({\n      // Access Token PoP headers must have type JWT, but the type header can be overriden for special cases\n      typ: shrHeaderOptions.typ || JsonTypes.Jwt,\n      kid: shrHeaderOptions.kid,\n      alg: shrHeaderOptions.alg\n    });\n    return JSON.stringify(shrHeader);\n  };\n  return JoseHeader;\n}();\nexport { JoseHeader };","map":null,"metadata":{},"sourceType":"module"}